question: Given an integer n, return true if it is possible to represent n as the sum of distinct powers of three. Otherwise, return false.

An integer y is a power of three if there exists an integer x such that y == 3x.

 
code:

class Solution {
public:
    // Function to check if the given number n can be expressed 
    // as a sum of distinct powers of three (3^0, 3^1, 3^2, ...).
    bool checkPowersOfThree(int n) {
        // Loop until n becomes 0
        while (n > 0) {
            // If the remainder when n is divided by 3 is 2,
            // it means we cannot express n as a sum of distinct powers of three.
            if (n % 3 == 2) {
                return false; // Not possible to represent n as required.
            }
            // Divide n by 3 to check the next power of three.
            n /= 3;
        }
        // If we exit the loop without finding a remainder of 2,
        // it means n can be expressed as a sum of distinct powers of three.
        return true; // Possible to represent n as required.
    }
};
