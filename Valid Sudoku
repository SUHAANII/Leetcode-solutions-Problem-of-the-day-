question: Determine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:

Each row must contain the digits 1-9 without repetition.
Each column must contain the digits 1-9 without repetition.
Each of the nine 3 x 3 sub-boxes of the grid must contain the digits 1-9 without repetition.
Note:

A Sudoku board (partially filled) could be valid but is not necessarily solvable.
Only the filled cells need to be validated according to the mentioned rules.

code:

class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        // Create 2D arrays to track the presence of numbers in rows, columns, and boxes
        bool rows[9][9] = {false};  // Tracks numbers in each row
        bool cols[9][9] = {false};  // Tracks numbers in each column
        bool boxes[9][9] = {false}; // Tracks numbers in each 3x3 box

        // Iterate through each cell in the 9x9 Sudoku board
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                // Check if the current cell is not empty ('.')
                if (board[i][j] != '.') {
                    // Convert the character to an integer (0-8)
                    int num = board[i][j] - '1'; // '1' -> 0, '2' -> 1, ..., '9' -> 8
                    
                    // Calculate the index of the 3x3 box
                    int boxIndex = (i / 3) * 3 + (j / 3);
                    
                    // Check if the number has already been seen in the current row, column, or box
                    if (rows[i][num] || cols[j][num] || boxes[boxIndex][num]) {
                        return false; // If seen, the Sudoku is invalid
                    }
                    
                    // Mark the number as seen in the respective row, column, and box
                    rows[i][num] = true; 
                    cols[j][num] = true; 
                    boxes[boxIndex][num] = true;
                }
            }
        }
        // If no duplicates are found, the Sudoku is valid
        return true;
    }
};
