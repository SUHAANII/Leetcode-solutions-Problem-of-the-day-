question: You are given an integer array nums of length n and a 2D array queries, where queries[i] = [li, ri].

For each queries[i]:

Select a subset of indices within the range [li, ri] in nums.
Decrement the values at the selected indices by 1.
A Zero Array is an array where all elements are equal to 0.

Return true if it is possible to transform nums into a Zero Array after processing all the queries sequentially, otherwise return false.

code:
class Solution {
public:
    // Function to check if the array can be reduced to all zeros based on given queries
    bool isZeroArray(vector<int>& nums, vector<vector<int>>& qs) {
        int n = nums.size(); // Get the size of the nums array
        vector<int> v(n + 1); // Create a difference array to track increments and decrements

        // Process each query to update the difference array
        for (auto i : qs) {
            v[i[0]]++; // Increment at the start index of the query
            v[i[1] + 1]--; // Decrement just after the end index of the query
        }

        int sum = 0; // Variable to keep track of the cumulative sum of increments
        // Iterate through the nums array
        for (int i = 0; i < n; i++) {
            sum += v[i]; // Update the cumulative sum with the current value in the difference array
            // If the current number can be reduced to zero
            if (nums[i] <= sum) {
                nums[i] = 0; // Set the number to zero
            } else {
                return false; // If it can't be reduced to zero, return false
            }
        }
        return true; // If all numbers can be reduced to zero, return true
    }
};
