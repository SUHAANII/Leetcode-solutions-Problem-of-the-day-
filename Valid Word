question: A word is considered valid if:

It contains a minimum of 3 characters.
It contains only digits (0-9), and English letters (uppercase and lowercase).
It includes at least one vowel.
It includes at least one consonant.
You are given a string word.

Return true if word is valid, otherwise, return false.

Notes:

'a', 'e', 'i', 'o', 'u', and their uppercases are vowels.
A consonant is an English letter that is not a vowel.

  code:

  class Solution {
public:
    // Function to check if the string 's' is valid based on specific criteria
    bool isValid(string s) {
        int n = s.length(); // Get the length of the string
        if (n < 3) return false; // Return false if the string length is less than 3

        int vowels = 0; // Counter for vowels
        int consonants = 0; // Counter for consonants
        string vowelList = "aeiouAEIOU"; // List of vowels (both lowercase and uppercase)

        // Loop through each character in the string 's'
        for (char c : s) {
            // Check if the character is an alphabet letter
            if (isalpha(c)) {
                // Check if the character is a vowel
                if (vowelList.find(c) != string::npos) {
                    vowels++; // Increment vowel counter
                } else {
                    consonants++; // Otherwise, it's a consonant
                }
            } else if (!isdigit(c)) {
                // If the character is not a digit and not an alphabet, return false (invalid character)
                return false; 
            }
        }

        // Return true if there is at least one vowel and one consonant
        return vowels >= 1 && consonants >= 1;
    }
};
