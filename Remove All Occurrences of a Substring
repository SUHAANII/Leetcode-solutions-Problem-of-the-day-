Question: Given two strings s and part, perform the following operation on s until all occurrences of the substring part are removed:

Find the leftmost occurrence of the substring part and remove it from s.
Return s after removing all occurrences of part.

A substring is a contiguous sequence of characters in a string.

code:
#include <string>

class Solution {
public:
    std::string removeOccurrences(std::string s, std::string part) {
        int partLen = part.size();
        std::string result;

        for (char c : s) {
            result.push_back(c); // Add the current character to the result

            // Check if the end of result matches the part
            if (result.size() >= partLen && 
                result.substr(result.size() - partLen) == part) {
                result.erase(result.size() - partLen); // Remove the part
            }
        }
        
        return result; // Return the modified string
    }
};
