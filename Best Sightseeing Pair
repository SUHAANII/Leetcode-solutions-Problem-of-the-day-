Question:  You are given an integer array values where values[i] represents the value of the ith sightseeing spot. Two sightseeing spots i and j have a distance j - i between them.

The score of a pair (i < j) of sightseeing spots is values[i] + values[j] + i - j: the sum of the values of the sightseeing spots, minus the distance between them.

Return the maximum score of a pair of sightseeing spots.

code: 
class Solution {
public:
    int maxScoreSightseeingPair(vector<int>& values) {
        // Initialize the maximum score to 0
        int ans = 0;

        // Initialize Prev with the value of the first element
        int Prev = values[0];

        // Iterate through the array starting from the second element
        for (int j = 1; j < values.size(); j++) {
            // Calculate the maximum score for the current pair (i, j)
            // The score is calculated as values[i] + values[j] - (j - i)
            // Here, Prev represents the maximum value of (values[i] + i) seen so far
            ans = max(ans, Prev + values[j] - j);

            // Update Prev to be the maximum of itself and the current value adjusted by its index
            Prev = max(Prev, values[j] + j);
        }

        // Return the maximum score found
        return ans;  
    }
};
