question: You are given a 0-indexed integer array players, where players[i] represents the ability of the ith player. You are also given a 0-indexed integer array trainers, where trainers[j] represents the training capacity of the jth trainer.

The ith player can match with the jth trainer if the player's ability is less than or equal to the trainer's training capacity. Additionally, the ith player can be matched with at most one trainer, and the jth trainer can be matched with at most one player.

Return the maximum number of matchings between players and trainers that satisfy these conditions.



code:
class Solution {
public:
    int matchPlayersAndTrainers(std::vector<int>& players, std::vector<int>& trainers) {
        // Sort both players and trainers to facilitate matching
        std::sort(players.begin(), players.end());
        std::sort(trainers.begin(), trainers.end());

        int count = 0; // Count of matched players
        int i = 0, j = 0; // Pointers for players and trainers

        // Use two pointers to iterate through players and trainers
        while (i < players.size() && j < trainers.size()) {
            // If the current player can be matched with the current trainer
            if (players[i] <= trainers[j]) {
                // Match found, increment the count
                count++;
                i++; // Move to the next player
                j++; // Move to the next trainer
            } else {
                // If the current trainer is not suitable, try the next trainer
                j++;
            }
        }
        
        // Return the total number of matched players
        return count;
    }
};
