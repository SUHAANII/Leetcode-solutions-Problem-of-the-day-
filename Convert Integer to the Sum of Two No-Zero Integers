question" No-Zero integer is a positive integer that does not contain any 0 in its decimal representation.

Given an integer n, return a list of two integers [a, b] where:

a and b are No-Zero integers.
a + b = n
The test cases are generated so that there is at least one valid solution. If there are many valid solutions, you can return any of them.

 
code:

class Solution {
public:
    // Function to find two integers that sum up to n and have no zeros in them
    vector<int> getNoZeroIntegers(int n) {
        // Lambda function to check if a number contains the digit zero
        auto check = [](int x) {
            // Loop through each digit of the number
            while (x > 0) {
                // If the last digit is zero, return false
                if (x % 10 == 0) return false;
                // Remove the last digit from the number
                x /= 10;
            }
            // If no zeros were found, return true
            return true;
        };

        // Iterate through possible values for the first integer (i)
        for (int i = 1; i < n; ++i) {
            // Calculate the second integer (j) as the difference from n
            int j = n - i;
            // Check if both integers do not contain the digit zero
            if (check(i) && check(j)) {
                // If both are valid, return them as a vector
                return {i, j};
            }
        }
        // Return an empty vector if no valid pair is found (though this case won't occur for n >= 2)
        return {};
    }
};
